shiny::runApp('Linear_test')
df <- read.csv("~/Dropbox/Resazurin/Pipeline_MIC_6h_github/output/tables/alldata.csv", stringsAsFactors = F)
reference <- readRDS("~/Dropbox/Resazurin/Pipeline_MIC_6h_github/output/tables/reference_data_normalized_model_list.rds")
View(df)
names(df)
df1 <- df[c("ID", "strain", "antibiotic", "quality", "run")]
View(df1)
data <- referece[[1]]
data <- reference[[1]]
names(data())
names(data)
data$data
plot(data$data$`log(newdf$concentration)`, data$data$`log(newdf$concentration)` )
plot(data$data$`log(newdf$concentration)`, data$data$`log(newdf$concentration)` )
plot(data$data$`log(newdf$concentration)`, data$data$normalized_points )
plot(data)
plot(data$data$`log(newdf$concentration)`, data$data$normalized_points )
library(drc)
model<-drm(data$data$`log(newdf$concentration)`, data$data$normalized_points,fct=LL.4())
model<-drm(data$data$`log(newdf$concentration)`~data$data$normalized_points,fct=LL.4())
plot(model)
model<-drm(data$data$normalized_points~data$data$`log(newdf$concentration)`,fct=LL.4())
plot(model)
model
plot(model)
model <- drm(data$data$normalized_points ~ data$data$`log(newdf$concentration)`,fct=LL.4())
model <- drm(data$data$normalized_points ~ data$data$`log(newdf$concentration)`,fct=L.4())
model <- drm(data$data$normalized_points ~ data$data$`log(newdf$concentration)`,fct=L.4())
plot(model)
model <- drm(data$data$normalized_points ~ data$data$`log(newdf$concentration)`,fct=L.4())
plot(model,log="x")
plot(model,log="xy")
plot(data$data$`log(newdf$concentration)`, data$data$normalized_points )
data$dataList$dose
data$dataList$resp
data$dataList$resp
data$dataList$origResp
conc <- data$dataList$dose
response <- data$dataList$resp
model <- drm(response ~ conc, fct = L.4())
plot(model)
model <- drm(response ~ conc, fct = LL.4())
plot(model)
plot(conc, response)
plot(data)
data <- reference[[1]]
plot(data)
data <- reference[1]
plot(data)
data <- reference[[1]]
plot(data)
model <- drm(response ~ conc, fct = L.4())
plot(data)
model <- drm(response ~ conc, fct = L.4())
model
data$varParm
data$fit$par
plot(data, log = "x")
plot(data, log = "x")
plot(data, log = "xy")
plot(data, log = "y")
